{
  "hash": "079e22f6fa355191a0acdafb151352eb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"30 Day Map Challenge: The Final Map\"\ndate: \"2024-11-30\"\ncategories: [Maps]\nimage: \"D30.png\"\nexecute:\n  echo: true\n  message: false\n  warning: false\n---\n\n\n\n# Day 30: The Final Map\n\nI am using today as an excuse to look at some new data (to me at least) that popped into my social media feed a month or so back, but I have not had chance to look at them yet.\n\nThese concern [UK small area gross value added (GVA) estimates](https://www.ons.gov.uk/economy/grossvalueaddedgva/datasets/uksmallareagvaestimates) - but something that interested me was that there were a lot of caveats when using these data - specifically:\n\n> The building blocks statistics are not directly comparable across nations because the levels of composition can vary hugely. This is because some small areas contain mainly (or exclusively) households, and others contain heavy industries.\n>\n> Further, the building blocks geographies are defined differently, which calls for caution when comparing and/or interpreting the statistics.\n>\n> The small areas statistics can appear quite volatile, but are more stable when aggregated to form larger geographic areas.\n\nThese all sounded like interesting challenges to me!\n\n## Exploring the Data\n\nLoad packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(janitor)\nlibrary(magrittr)\nlibrary(kableExtra)\nlibrary(viridis)\nlibrary(httr)\n```\n:::\n\n\n\nThis reads the data for England and cleans up the column names.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# URL\nurl <- \"https://www.ons.gov.uk/file?uri=/economy/grossvalueaddedgva/datasets/uksmallareagvaestimates/1998to2022/uksmallareagvaestimates1998to2022.xlsx\"\n\n# Download the file to a temporary location\ntemp_file <- tempfile(fileext = \".xlsx\")\nGET(url, write_disk(temp_file, overwrite = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse [https://www.ons.gov.uk/file?uri=/economy/grossvalueaddedgva/datasets/uksmallareagvaestimates/1998to2022/uksmallareagvaestimates1998to2022.xlsx]\n  Date: 2024-11-14 10:21\n  Status: 200\n  Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\n  Size: 13.9 MB\n<ON DISK>  /tmp/RtmpvWl2Xb/file28179bc44.xlsx\n```\n\n\n:::\n\n```{.r .cell-code}\n# Read the Excel file\ngva <- read_excel(temp_file, sheet = \"Table 1\", skip = 1) %>% clean_names()\n\n#Subset\ngva %<>%\n  select(lsoa_code,x1998:x2022)\n```\n:::\n\n\n\nWe can then create a function to produce an index calibrated against the earliest year of data; in this case 1998.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalculate_index <- function(df) {\n  \n  # Get the base year (1998) values\n  base_values <- df %>% \n    select(x1998) %>% \n    pull()\n  \n  df_index <- df %>%\n    mutate(\n      across(\n        starts_with(\"x\"),\n        ~ (.x / base_values) * 100\n      )\n    )\n  \n  return(df_index)\n}\n\ngva_index <- calculate_index(gva)\n```\n:::\n\n\n\n## Make a Map\n\nFirst we read in the LSOA polygons and remove unwanted attributes. It is worth noting that the codes supplied on the GVA data are for the 2011 version of the codes! It would be fantastic if the formal code names were used on all government data, as you often have to discover this later when lots of matches fail!\n\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n# Download data\n\nlsoa_sf <- st_read(\"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/LSOA_Dec_2011_Boundaries_Generalised_Clipped_BGC_EW_V3/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `OGRGeoJSON' from data source \n  `https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/LSOA_Dec_2011_Boundaries_Generalised_Clipped_BGC_EW_V3/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson' \n  using driver `GeoJSON'\nSimple feature collection with 34753 features and 11 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -6.418622 ymin: 49.86474 xmax: 1.763571 ymax: 55.81107\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Subset to England and remove unwanted columns\n\nlsoa_sf %<>%\n  filter(startsWith(LSOA11CD, \"E\")) %>%\n  select(LSOA11CD)\n```\n:::\n\n\n\nNext we can Join the GVA to the polygons.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join\nlsoa_sf %<>%\n  left_join(gva_index, by = c(\"LSOA11CD\" = \"lsoa_code\"))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `output_file.gpkg' using driver `GPKG'\nWriting layer `output_file' to data source `output_file.gpkg' using driver `GPKG'\nWriting 32844 features with 26 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n\n\nAnd then create a map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbreaks <- c(-Inf, 27, 43, 60, 76, 92, 108, 124, 140, 157, 173, Inf)\nlabels <- c(\"11 - 27\", \"27 - 43\", \"43 - 60\", \"60 - 76\", \n            \"76 - 92\", \"92 - 108\", \"108 - 124\", \"124 - 140\", \n            \"140 - 157\", \"157 - 173\", \"173 - 4845\")\n\n# Create a categorized variables\nlsoa_sf$category <- cut(lsoa_sf$x2022,\n                        breaks = breaks,\n                        labels = labels,\n                        right = FALSE)  # left-inclusive intervals\n\n# Define colors corresponding to each range\ncolors <- c(\n  \"11 - 27\" = \"#d7191c\",\n  \"27 - 43\" = \"#e65538\",\n  \"43 - 60\" = \"#f59053\",\n  \"60 - 76\" = \"#fdbe74\",\n  \"76 - 92\" = \"#fedf99\",\n  \"92 - 108\" = \"#ffffbf\",\n  \"108 - 124\" = \"#ddf1b4\",\n  \"124 - 140\" = \"#bce4a9\",\n  \"140 - 157\" = \"#91cba8\",\n  \"157 - 173\" = \"#5ea7b1\",\n  \"173 - 4845\" = \"#2b83ba\"\n)\n# Plot with manual colors\nggplot(data = lsoa_sf) +\n  geom_sf(aes(fill = category), color = NA) +\n  scale_fill_manual(values = colors) +\n  theme_minimal() +\n  labs(\n    fill = \"2022 Index (base 1998)\"\n  ) +\n  labs(size = \"Proximity\") +  # Change \"New Legend Title\" to your desired title\n  coord_sf(crs = st_crs(27700)) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nThe patterns are quite noisy, and when you explore some of the more extreme patterns there are clearly areas where these may be statistical anomaly; which follows some of the warnings in how to use these data. However, in some areas this appears to not be the case. The following area shows negative GVA relative to 1998, and is the location of [Thoresby Colliery](https://en.wikipedia.org/wiki/Thoresby_Colliery) which closed in 2015, so within the comparison period.\n\n![](30.png)\n\n## GVA and Retail Centres\n\nNext I thought it would be interesting to use the GVA data to explore some aspects of retail. First we import the [CDRC Retail Centre definitions](https://data.cdrc.ac.uk/dataset/retail-centre-boundaries-and-open-indicators). This is all quite rough, so with more time I would do these analysis a little more thoroughly!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get retail centres\nretail_sf <- st_read(\"Retail_Boundaries_UK.gpkg\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Retail_Boundaries_UK' from data source \n  `/home/rstudio/alexsingleton.github.io/content/blog/2024-11-30-30DMC_The_Final_Map/Retail_Boundaries_UK.gpkg' \n  using driver `GPKG'\nSimple feature collection with 6423 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 33363.7 ymin: 10471.87 xmax: 655167.5 ymax: 1142036\nProjected CRS: OSGB36 / British National Grid\n```\n\n\n:::\n:::\n\n\n\nThen we use a spatial join to look at the intersection of retail centres and the LSOA.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure both are in the same coordinate reference system (CRS)\nlsoa_sf <- st_transform(lsoa_sf, st_crs(retail_sf))\n# Join\npoints_with_retail <- st_join(retail_sf,lsoa_sf, join =st_intersects)\n\n# Filter to England\npoints_with_retail %<>% filter(Country==\"England\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform spatial intersection to get overlapping areas\noverlap_sf <- st_intersection(retail_sf, lsoa_sf %>% st_make_valid())\n\n# Calculate the area of the intersected geometries\noverlap_sf$overlap_area <- st_area(overlap_sf)\n```\n:::\n\n\n\nWe can then analyse the changes in GVA by retail center type to identify which types have experienced the most growth since 1999. Because our classification segments by more traditional types of retail agglomeration and those which are designed to be concentrated, such as within a retail park or shopping centre, these are reflected in the statistics and represent a general evolution in retail since 1999.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlap_sf %>%\n  filter(!is.na(Classification)) %>%  # Remove rows with NA\n  group_by(Classification) %>%\n  summarise(\n    Weighted_Average_Index = as.numeric(sum(x2022 * overlap_area, na.rm = TRUE) / sum(overlap_area), na.rm = TRUE)\n  ) %>%\n  arrange(desc(Weighted_Average_Index)) %>%\n  st_drop_geometry() %>%\n  kable(align = 'lcc') %>%\n  kable_styling(bootstrap_options = \"responsive\", full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-responsive\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Classification </th>\n   <th style=\"text-align:center;\"> Weighted_Average_Index </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Small Shopping Centre </td>\n   <td style=\"text-align:center;\"> 652.1828 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Regional Centre </td>\n   <td style=\"text-align:center;\"> 359.3353 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Large Shopping Centre </td>\n   <td style=\"text-align:center;\"> 321.3384 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Small Retail Park </td>\n   <td style=\"text-align:center;\"> 270.9027 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Large Retail Park </td>\n   <td style=\"text-align:center;\"> 252.0647 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> District Centre </td>\n   <td style=\"text-align:center;\"> 246.5589 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Major Town Centre </td>\n   <td style=\"text-align:center;\"> 244.6297 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Small Local Centre </td>\n   <td style=\"text-align:center;\"> 243.0592 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Town Centre </td>\n   <td style=\"text-align:center;\"> 237.2312 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Local Centre </td>\n   <td style=\"text-align:center;\"> 236.3928 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Market Town </td>\n   <td style=\"text-align:center;\"> 226.3048 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nWe can then have a look at some of these patterns by retail centre. These were restricted to the two largest types of traditional retail centre. Some interesting patterns emerge.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults <- overlap_sf %>%\n            filter(!is.na(RC_Name)) %>%  # Remove rows with NA\n            filter(Classification %in% c(\"Regional Centre\",\"Major Town Centre\")) %>%\n            group_by(RC_Name) %>%\n            summarise(\n              Weighted_Average_Index = as.numeric(sum(x2022 * overlap_area, na.rm = TRUE) / sum(overlap_area), na.rm = TRUE)\n            ) %>%\n            arrange(desc(Weighted_Average_Index)) \n            \n  #Display the table\n  results %>%\n  st_drop_geometry() %>%\n            kable(align = 'lcc') %>%\n            kable_styling(bootstrap_options = \"responsive\", full_width = F) %>%\n            scroll_box(height = \"300px\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:300px; \"><table class=\"table table-responsive\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> RC_Name </th>\n   <th style=\"text-align:center;position: sticky; top:0; background-color: #FFFFFF;\"> Weighted_Average_Index </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Bradford; Bradford (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 603.7709 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bristol City; Bristol (South West; England) </td>\n   <td style=\"text-align:center;\"> 458.7708 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Worthing; Worthing (South East; England) </td>\n   <td style=\"text-align:center;\"> 454.0608 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Manchester City; Manchester (North West; England) </td>\n   <td style=\"text-align:center;\"> 439.3316 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Leeds City, Leeds (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 418.5523 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> St Albans; St Albans (East of England; England) </td>\n   <td style=\"text-align:center;\"> 408.0652 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Nottingham; Nottingham (East Midlands; England) </td>\n   <td style=\"text-align:center;\"> 399.1771 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> London; London (London; England) </td>\n   <td style=\"text-align:center;\"> 378.7947 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Reading; Reading (South East; England) </td>\n   <td style=\"text-align:center;\"> 370.4064 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Oxford; Oxford (South East; England) </td>\n   <td style=\"text-align:center;\"> 354.4344 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Warrington; Warrington (North West; England) </td>\n   <td style=\"text-align:center;\"> 342.4695 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brighton and Hove; Brighton and Hove (South East; England) </td>\n   <td style=\"text-align:center;\"> 325.4165 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sheffield City; Sheffield (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 324.4665 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hounslow; Hounslow (London; England) </td>\n   <td style=\"text-align:center;\"> 318.0803 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bournemouth; Bournemouth, Christchurch and Poole (South West; England) </td>\n   <td style=\"text-align:center;\"> 304.0225 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Leicester; Leicester (East Midlands; England) </td>\n   <td style=\"text-align:center;\"> 302.4936 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Stoke; Stoke-on-Trent (West Midlands; England) </td>\n   <td style=\"text-align:center;\"> 301.3301 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Newcastle City; Newcastle upon Tyne (North East; England) </td>\n   <td style=\"text-align:center;\"> 296.0757 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Lancaster; Lancaster (North West; England) </td>\n   <td style=\"text-align:center;\"> 289.9517 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Southampton; Southampton (South East; England) </td>\n   <td style=\"text-align:center;\"> 287.6918 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Birmingham City; Birmingham (West Midlands; England) </td>\n   <td style=\"text-align:center;\"> 284.9352 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Liverpool City; Liverpool (North West; England) </td>\n   <td style=\"text-align:center;\"> 281.1173 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exeter; Exeter (South West; England) </td>\n   <td style=\"text-align:center;\"> 280.9092 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Wigan; Wigan (North West; England) </td>\n   <td style=\"text-align:center;\"> 278.9805 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Knightsbridge; Kensington and Chelsea (London; England) </td>\n   <td style=\"text-align:center;\"> 276.0378 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Northampton; Northampton (East Midlands; England) </td>\n   <td style=\"text-align:center;\"> 274.4235 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Plymouth; Plymouth (South West; England) </td>\n   <td style=\"text-align:center;\"> 274.1781 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hull; Kingston upon Hull (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 272.6131 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Chester; Cheshire West and Chester (North West; England) </td>\n   <td style=\"text-align:center;\"> 269.3055 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Lincoln; Lincoln (East Midlands; England) </td>\n   <td style=\"text-align:center;\"> 266.6141 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Guildford; Guildford (South East; England) </td>\n   <td style=\"text-align:center;\"> 265.0940 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Stockport; Stockport (North West; England) </td>\n   <td style=\"text-align:center;\"> 264.3075 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Canterbury; Canterbury (South East; England) </td>\n   <td style=\"text-align:center;\"> 261.6701 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bath; Bath and North East Somerset (South West; England) </td>\n   <td style=\"text-align:center;\"> 258.9825 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Doncaster; Doncaster (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 257.4575 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ipswich; Ipswich (East of England; England) </td>\n   <td style=\"text-align:center;\"> 257.2136 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Middlesbrough; Middlesbrough (North East; England) </td>\n   <td style=\"text-align:center;\"> 256.9389 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Worcester; Worcester (West Midlands; England) </td>\n   <td style=\"text-align:center;\"> 256.2160 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Watford; Watford (East of England; England) </td>\n   <td style=\"text-align:center;\"> 253.4625 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bolton; Bolton (North West; England) </td>\n   <td style=\"text-align:center;\"> 252.8540 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hastings; Hastings (South East; England) </td>\n   <td style=\"text-align:center;\"> 248.2206 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Barnsley; Barnsley (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 246.2507 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cheltenham; Cheltenham (South West; England) </td>\n   <td style=\"text-align:center;\"> 246.2328 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Truro; Cornwall (South West; England) </td>\n   <td style=\"text-align:center;\"> 244.5830 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> York; York (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 242.5009 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Derby; Derby (East Midlands; England) </td>\n   <td style=\"text-align:center;\"> 239.0582 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blackpool; Blackpool (North West; England) </td>\n   <td style=\"text-align:center;\"> 237.6552 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Maidstone; Maidstone (South East; England) </td>\n   <td style=\"text-align:center;\"> 236.2865 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Royal Leamington Spa; Warwick (West Midlands; England) </td>\n   <td style=\"text-align:center;\"> 233.6452 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sutton; Sutton (London; England) </td>\n   <td style=\"text-align:center;\"> 225.4427 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Preston; Preston (North West; England) </td>\n   <td style=\"text-align:center;\"> 225.3978 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Kingston upon Thames; London (London; England) </td>\n   <td style=\"text-align:center;\"> 223.7936 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Peterborough; Peterborough (East of England; England) </td>\n   <td style=\"text-align:center;\"> 219.9911 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cambridge; Cambridge (East of England; England) </td>\n   <td style=\"text-align:center;\"> 219.5252 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Romford; London (London; England) </td>\n   <td style=\"text-align:center;\"> 215.6034 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Scarborough; Scarborough (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 214.0865 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Huddersfield; Kirklees (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 213.8794 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Norwich; Norwich (East of England; England) </td>\n   <td style=\"text-align:center;\"> 212.4205 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Croydon; London (London; England) </td>\n   <td style=\"text-align:center;\"> 210.9787 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Colchester; Colchester (East of England; England) </td>\n   <td style=\"text-align:center;\"> 210.7075 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Royal Tunbridge Wells; Tunbridge Wells (South East; England) </td>\n   <td style=\"text-align:center;\"> 206.5099 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hereford; County of Herefordshire (West Midlands; England) </td>\n   <td style=\"text-align:center;\"> 205.7771 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ealing; Ealing (London; England) </td>\n   <td style=\"text-align:center;\"> 205.1098 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Wood Green; London (London; England) </td>\n   <td style=\"text-align:center;\"> 204.8174 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Loughborough; Charnwood (East Midlands; England) </td>\n   <td style=\"text-align:center;\"> 201.8812 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bedford; Bedford (East of England; England) </td>\n   <td style=\"text-align:center;\"> 201.6262 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ilford; London (London; England) </td>\n   <td style=\"text-align:center;\"> 200.4038 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Southport; Sefton (North West; England) </td>\n   <td style=\"text-align:center;\"> 195.6721 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Coventry; Coventry (West Midlands; England) </td>\n   <td style=\"text-align:center;\"> 195.0813 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Shrewsbury; Shropshire (West Midlands; England) </td>\n   <td style=\"text-align:center;\"> 194.3616 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Wakefield; Wakefield (Yorkshire and The Humber; England) </td>\n   <td style=\"text-align:center;\"> 192.3007 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Milton Keynes; Milton Keynes (South East; England) </td>\n   <td style=\"text-align:center;\"> 191.0835 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Carlisle; Carlisle (North West; England) </td>\n   <td style=\"text-align:center;\"> 188.4729 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sunderland; Sunderland (North East; England) </td>\n   <td style=\"text-align:center;\"> 183.6281 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Darlington; Darlington (North East; England) </td>\n   <td style=\"text-align:center;\"> 181.8393 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Eastbourne; Eastbourne (South East; England) </td>\n   <td style=\"text-align:center;\"> 181.5299 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> King's Lynn; King's Lynn and West Norfolk (East of England; England) </td>\n   <td style=\"text-align:center;\"> 177.0160 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Taunton; Somerset West and Taunton (East of England; England) </td>\n   <td style=\"text-align:center;\"> 174.7752 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Wolverhampton; Wolverhampton (West Midlands; England) </td>\n   <td style=\"text-align:center;\"> 159.6873 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bromley; London (London; England) </td>\n   <td style=\"text-align:center;\"> 151.8955 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Salisbury; Wiltshire (South West; England) </td>\n   <td style=\"text-align:center;\"> 134.6113 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Swindon; Swindon (South West; England) </td>\n   <td style=\"text-align:center;\"> 127.8705 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Luton; Luton (East of England; England) </td>\n   <td style=\"text-align:center;\"> 104.4664 </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\n\nWe can also map these index values. My takeaway from these data are that they are potentially very interesting and I suspect after this fairly rough and ready exploration may well make their way into a retail paper over the next couple of months!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate centroids of the polygons\nresults$centroid <- st_centroid(results$geom)\n\n# Extract the coordinates of centroids into separate columns\nresults <- results %>%\n  mutate(\n    centroid_x = st_coordinates(centroid)[, 1],\n    centroid_y = st_coordinates(centroid)[, 2]\n  )\n\n# Create a ggplot map with a combined legend\nggplot() +\n  # Plot the polygons\n  geom_sf(data = lsoa_sf, fill = \"lightgray\", color = NA) +\n  # Plot the centroids with combined size and color\n  geom_point(\n    data = results,\n    aes(\n      x = centroid_x, \n      y = centroid_y, \n      size = Weighted_Average_Index, \n      color = Weighted_Average_Index\n    )\n  ) +\n  # Apply a combined scale for color and size with a unified legend\n  scale_size_continuous(range = c(1, 8)) +\n  scale_color_viridis_c() +\n  guides(\n    color = guide_legend(\n      title = \"Weighted Average Index\",\n      override.aes = list(size = 5)\n    )\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.spacing = unit(0, \"mm\"),\n    plot.margin = unit(rep(0, 4), \"mm\"),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}