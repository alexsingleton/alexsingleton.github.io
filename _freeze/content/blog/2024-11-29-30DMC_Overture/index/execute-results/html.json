{
  "hash": "2e141ba8b39153aa4afb21cc3e4b0a1d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"30 Day Map Challenge: Overture\"\ndate: \"2024-11-29\"\ncategories: [Maps]\nimage: \"D29.png\"\nexecute:\n  echo: true\n  message: false\n  warning: false\n---\n\n\n\n# Day 29: Overture\n\nWe have been looking at the Overture data in the [CDRC](https://data.cdrc.ac.uk/) and have created a data pipeline that creates a UK POI dataset. You can download this [here](https://data.cdrc.ac.uk/dataset/point-interest-data-united-kingdom#data-and-resources). For a simple example of how to use the data, the following code extracts POI for the three largest coffee chains in the UK and maps these for Liverpool City Region.\n\nFirst, we load the required packages and read in the CDRC Overture POI data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nPOI <- st_read(\"poi_uk.gpkg\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `poi_uk' from data source \n  `/home/rstudio/alexsingleton.github.io/content/blog/2024-11-29-30DMC_Overture/poi_uk.gpkg' \n  using driver `GPKG'\nSimple feature collection with 2521182 features and 17 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3284.871 ymin: 8070.307 xmax: 655598.3 ymax: 1219395\nProjected CRS: OSGB36 / British National Grid\n```\n\n\n:::\n:::\n\n\n\nNext, we need to subset the data for the different coffee chains. The categories and names are a bit messy, so to capture the POI, we need to use a combination of the store name and the two levels of category.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnero <- POI %>%\n  filter(\n    grepl(\"Caffè Nero\", primary_name, ignore.case = TRUE) &\n    (grepl(\"coffee\", main_category, ignore.case = TRUE) | \n     grepl(\"coffee\", alternate_category, ignore.case = TRUE))\n  )\n\nstarbucks <- POI %>%\n  filter(\n    grepl(\"starbucks\", primary_name, ignore.case = TRUE) &\n    (grepl(\"coffee\", main_category, ignore.case = TRUE) | \n     grepl(\"coffee\", alternate_category, ignore.case = TRUE))\n  )\n\n\ncosta <- POI %>%\n  filter(\n    grepl(\"costa\", primary_name, ignore.case = TRUE) &\n    (grepl(\"coffee\", main_category, ignore.case = TRUE) | \n     grepl(\"coffee\", alternate_category, ignore.case = TRUE))\n  )\n```\n:::\n\n\n\nWe can then read in a further set of polygons that represent the area of Liverpool City Region.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Get City Region Boundaries and subset for Liverpool\nCR_SF <- st_read(\"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Combined_Authorities_May_2023_Boundaries_EN_BGC/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson\") %>% filter(CAUTH24CD == \"E47000004\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `OGRGeoJSON' from data source \n  `https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Combined_Authorities_May_2023_Boundaries_EN_BGC/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson' \n  using driver `GeoJSON'\nSimple feature collection with 11 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -3.229017 ymin: 51.2731 xmax: 0.514484 ymax: 55.81112\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\nNext, we create a subset of the coffee chains that intersect with the Liverpool City Region polygon.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure all layers have the same CRS\nCRS_target <- st_crs(CR_SF)  # Get the CRS of CR_SF\n\n# Transform the points datasets to match the CRS of CR_SF\nnero <- st_transform(nero, CRS_target)\ncosta <- st_transform(costa, CRS_target)\nstarbucks <- st_transform(starbucks, CRS_target)\n\n# Subset points to only those within Liverpool City Region\nnero_subset <- st_intersection(nero, CR_SF)\ncosta_subset <- st_intersection(costa, CR_SF)\nstarbucks_subset <- st_intersection(starbucks, CR_SF)\n```\n:::\n\n\n\nAnd finally, we can use these to create a map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  # Add the boundary\n  geom_sf(data = CR_SF, fill = \"#005f73\", color = \"#001219\", linewidth = 0.5) +\n  \n  # Add coffee shops with different colors and labels\n  geom_sf(data = nero_subset, aes(color = \"Caffè Nero\"), size = 1.2, alpha = 1) +\n  geom_sf(data = costa_subset, aes(color = \"Costa Coffee\"), size = 1.2, alpha = 1) +\n  geom_sf(data = starbucks_subset, aes(color = \"Starbucks\"), size = 1.2, alpha = 1) +\n  \n  # Add legend\n  scale_color_manual(\n    name = \"Coffee Shops\",\n    values = c(\"Caffè Nero\" = \"#0096c7\",\n              \"Costa Coffee\" = \"#bb3e03\",\n              \"Starbucks\" = \"#6a994e\")\n  ) +\n    theme_minimal() +\n\n\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.spacing = unit(0, \"mm\"),\n    plot.margin = unit(rep(0, 4), \"mm\"),\n    plot.background = element_rect(fill = 'grey', colour = 'grey'),\n    legend.text = element_text(size = 12, family = \"Mono\", face = \"italic\"),\n    legend.title = element_text(size = 14, family = \"Mono\", face = \"bold\"),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}