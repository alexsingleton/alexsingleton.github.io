{
  "hash": "c54a227bee54ed1dd32f67c054057b42",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"30 Day Map Challenge: Only Circular Shapes\"\ndate: \"2024-11-24\"\ncategories: [Maps]\nimage: \"D24.png\"\nexecute:\n  echo: true\n  message: false\n  warning: false\n---\n\n\n\n# Day 24: Only Circular Shapes\n\nIn this map we explore the geography of greenspace in Greater London. Circles are used to visualise change in access. The data used for this map were derived [OS Open Greenpace](https://www.ordnancesurvey.co.uk/products/os-open-greenspace), which were used to generate statistics for a grid of circles spanning Greater London.\n\nFirst we start by loading the necessary packages:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \nlibrary(sf)\nlibrary(ggplot2) \nlibrary(magrittr)\nlibrary(units) \nlibrary(magick)\n```\n:::\n\n\n\nNext, we import the greenspace data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load the Greenspace Polygon Data\nLondon_Greenspace <- st_read(\"London_Greenspace.gpkg\",quiet = TRUE)\n```\n:::\n\n\n\nWe can have a quick look, both frequency of polygons:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLondon_Greenspace %>%\n count(function.) %>%\n  ggplot(aes(x = function., y = n, fill = function.)) +\n   geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(x = \"Function\", y = \"Count\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nAnd also the size of the area covered by each category:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the area\nLondon_Greenspace <- London_Greenspace %>%\n  mutate(area = as.numeric(st_area(geom)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nLondon_Greenspace %>%\n  group_by(function.) %>%    \n  summarize(total_area = sum(area, na.rm = TRUE)/1000) %>%\n  ggplot(aes(x = reorder(function., total_area), y = total_area, fill = function.)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(x = \"Function\", y = \"Total Area (sq km)\") +\n  scale_y_continuous(labels = scales::comma) +  \n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nNext we will generate a grid of points spanning the extent of London:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the polygon data from the Geopackage\nLondon <- st_read(\"London.gpkg\",quiet = TRUE)\n\n# Create a grid of points within the bounding box of the polygon\ngrid_points <- st_make_grid(London, cellsize = 1000, what = \"centers\") %>%\n  st_sf()\n\n# Clip the points to only those within Greater London\ngrid_points <- st_intersection(grid_points, London)\n```\n:::\n\n\nWe can then create a subset of the greenspace SF to look specifically at the \"Allotments Or Community Growing Spaces\" category. Using this, we can then calculate a simple measure of accessibility to these locations from across Greater London.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAllotments <- London_Greenspace %>%\n  filter(function. == \"Allotments Or Community Growing Spaces\")\n```\n:::\n\n\n\nThe following code calculates the distance to the nearest \"Allotments Or Community Growing Spaces\" polygon for each of the gridded points.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the distance from each grid point to the nearest polygon\ngrid_points <- grid_points %>%\n  rowwise() %>%\n  mutate(\n    distance_to_polygon = min(st_distance(geometry, Allotments))\n  ) %>%\n  ungroup()\n```\n:::\n\n\n\nThe following code then creates a set of five bins for the distances.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrid_points %<>%\n    mutate(distance_category = ntile(-distance_to_polygon, 5))\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\nThese are then used to create the map:\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = grid_points, color = \"#283618\", aes(size = distance_category)) +\n  scale_size_continuous(\n    range = c(0, 2),\n    labels = c(\"Far\", \"\", \"\", \"\", \"Near\")\n  ) +\n  labs(size = \"Proximity\") +  # Change \"New Legend Title\" to your desired title\n  coord_sf(crs = st_crs(27700)) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.spacing = unit(0, \"mm\"),\n    plot.margin = unit(rep(0, 4), \"mm\"),\n    #panel.background = element_rect(fill = \"#76a048\", colour = \"#76a048\"),\n    plot.background = element_rect(fill = '#76a048', colour = '#76a048'),\n    legend.text = element_text(size = 12, family = \"Mono\", face = \"italic\"),\n    legend.title = element_text(size = 14, family = \"Mono\", face = \"bold\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-cropped-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}